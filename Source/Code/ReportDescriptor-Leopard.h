#include <Availability.h>

#if __MAC_OS_X_VERSION_MIN_REQUIRED > 1040
const unsigned char report_descriptor[] =
{
0x5, 0xc, /* USAGE_PAGE (Consumer) */
0x9, 0x1, /* USAGE (Consumer Control) */
0xa1, 0x1, // COLLECTION (Application)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x1, // LOGICAL_MINIMUM (1)
0x25, 0x2, // LOGICAL_MAXIMUM (3)
0x85, 0x1, // REPORT_ID (1)
0x9, 0xff, // USAGE (* Unknown *)
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0, // LOGICAL_MINIMUM (0)
0x25, 0x1, // LOGICAL_MAXIMUM (1)
0x85, 0x2, // REPORT_ID (2)		
0x9,  0xb4, // USAGE (Rewind)
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8,  // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x3,  // REPORT_ID (3)		
0x9, 0xb3,	// USAGE (Fast Forward)
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8,  // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x4,  // REPORT_ID (4)		
0x9, 0x41,	// USAGE (Menu Pick)
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x1, // LOGICAL_MINIMUM (1)
0x25, 0x4, // LOGICAL_MAXIMUM (4)
0x85, 0x5, // REPORT_ID (5)
0x9, 0x22, /* AM/PM */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x6,  // REPORT_ID (6)
0x9, 0x43, 		/* Menu Down */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x7, // REPORT_ID (7)
0x9, 0x44, /* Menu Left */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x8, // REPORT_ID (8)
0x9, 0x45, /* Menu Right */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x9, // REPORT_ID (9)
0x9,  0xe9,	/* Volume Up */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x1,
0x25, 0x2,
0x85, 0xa, // REPORT_ID (10)
0x9, 0xea, /* Volume Down */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0xb, // REPORT_ID (11)
0x9, 0xcd, /* Pause/Play */
0x81, 0x6,

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0xc, // REPORT_ID (12)
0x9, 0xb0, /* Play */
0x81, 0x6,

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x1,
0x25, 0x1,
0x85, 0xd, // REPORT_ID (13)
0x9, 0xb1, /* Pause */
0x81, 0x6,

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0xd, // REPORT_ID (14)
0x9, 0xb5, /* Scan Next Track */
0x81, 0x6,

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0xd, // REPORT_ID (15)
0x9, 0xb6, /* Scan Previous Track */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x10, // REPORT_ID (16)
0x9, 0xe2, /* Mute */
0x81, 0x6,

0x75, 0x8,  // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x11,  // REPORT_ID (17)		
0x9, 0x40,	// USAGE (Menu-Hold)
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x5, 0x1, // USAGE_PAGE (Generic Desktop) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1,  // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x4, // LOGICAL_MAXIMUM (4) 
0x85, 0x12, // REPORT_ID (18)
0x9, 0xff, /* Unknown - should be 0xffffffff */
0x81, 0x2, // INPUT (Data,Var,Abs) 


0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x13,  // REPORT_ID (19)
0x9, 0x86, 		/* System App Menu */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x14,  // REPORT_ID (20)
0x9, 0x89, 		/* Play/Select */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x15,  // REPORT_ID (21)
0x9, 0x8a, 		/* Right */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x16,  // REPORT_ID (22)
0x9, 0x8b, 		/* Left */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x17,  // REPORT_ID (23)
0x9, 0x84, 		/* Context Menu */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x18,  // REPORT_ID (24)
0x9, 0x85, 		/* Main Menu */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x19,  // REPORT_ID (25)
0x9, 0x82, 		/* Sleep */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x1a,  // REPORT_ID (26)
0x9, 0x83, 		/* Wake Up */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x1,  // LOGICAL_MINIMUM (1)
0x25, 0x2,  // LOGICAL_MAXIMUM (2)
0x85, 0x1b,  // REPORT_ID (27)
0x9, 0xff, 		/* Unknown - should be 0xffffffff */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x1c,  // REPORT_ID (28)
0x9, 0x8c, 		/* Menu Up */
0x81, 0x2,  // INPUT (Non-relative)

0x75, 0x8, // REPORT_SIZE (8)
0x95, 0x1, // REPORT_COUNT (1)
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x25, 0x1,  // LOGICAL_MAXIMUM (1)
0x85, 0x1d,  // REPORT_ID (29)
0x9, 0x8d, 		/* System Menu Down */
0x81, 0x2,  // INPUT (Non-relative)

0x6, 0x01, 0xff, // USAGE_PAGE (Unknown)

0x75, 0x8,
0x95, 0x1,
0x15, 0x1, // LOGICAL_MINIMUM (1)
0x25, 0x6, // LOGICAL_MAXIMUM (6)
0x85, 0x1e, // REPORT_ID (30)
0x9,  0xff, 		/* Unknown - should be 0xffffffff */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x1f, // REPORT_ID (31)
0x9, 0x20, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x20, // REPORT_ID (32)
0x9, 0x21, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x21, // REPORT_ID (33)
0x9, 0x22, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x22, // REPORT_ID (34)
0x9, 0x23, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x23, // REPORT_ID (35)
0x9, 0x30, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x24, // REPORT_ID (36)
0x9, 0x31, /* Unknown */
0x81, 0x6,

0x75, 0x8,
0x95, 0x1,
0x15, 0x0,
0x25, 0x1,
0x85, 0x25, // REPORT_ID (37)
0x9, 0x50, /* Unknown */
0x81, 0x6,

0x5, 0x0006, // USAGE_PAGE (Unknown) 
0x75, 0x8,
0x95, 0x1,		
0x15, 0x0,  // LOGICAL_MINIMUM (0)
0x26, 0xff, 0x0, // LOGICAL_MAXIMUM (255) 
0x85, 0x26, // REPORT_ID (38)
0x9, 0x22, /* Unknown */
0x81, 0x6,  // INPUT (Data,Var,Abs) 

0xc0 // END_COLLECTION 
};
#endif /* __MAC_OS_X_VERSION_MIN_REQUIRED > 1040 */
